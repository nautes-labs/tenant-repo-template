apiVersion: v1
kind: ConfigMap
metadata:
  name: resource-transform-rules
  namespace: system
data:
  redis-instance.yaml: | 
    providerType: operatorhub
    callerType: http
    resourceType: redis-instance
    create:
      generation:
        request: POST
        body: |
          {
            "apiVersion": "redis.redis.opstreelabs.in/v1beta2",
            "kind": "Redis",
            "metadata": {
              "name": "{{ .Name }}"
            },
            "spec": {
              "podSecurityContext": {
                "runAsUser": 1000,
                "fsGroup": 1000
              },
              "kubernetesConfig": {
                "image": "quay.io/opstree/redis:{{ index .Spec "version" }}",
                "imagePullPolicy": "IfNotPresent",
                "redisSecret": {
                   "name": "{{ .Spec.initPasswordSecretName }}",
                   "key": "{{ .Spec.secretKey }}"
                },
                "resources": {
                  "requests": {
                    "cpu": "101m",
                    "memory": "128Mi"
                  },
                  "limits": {
                    "cpu": "101m",
                    "memory": "128Mi"
                  }
                }
              },
              "redisExporter": {
                "enabled": false,
                "image": "quay.io/opstree/redis-exporter:v1.44.0",
                "imagePullPolicy": "Always",
                "resources": {
                  "requests": {
                    "cpu": "100m",
                    "memory": "128Mi"
                  },
                  "limits": {
                    "cpu": "100m",
                    "memory": "128Mi"
                  }
                }
              },
              "storage": {
                "volumeClaimTemplate": {
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "{{ index .Spec "storageSize" }}"
                      }
                    }
                  }
                }
              }
            }
          }
        uri: 'apis/redis.redis.opstreelabs.in/v1beta2/namespaces/{{ .Space }}/redis'
      parse:
      - name: image
        path: .spec.kubernetesConfig.image
    get:
      generation:
        request: GET
        uri: 'apis/redis.redis.opstreelabs.in/v1beta2/namespaces/{{ .Space }}/redis/{{ .Name }}'
      parse:
      - name: image
        path: .spec.kubernetesConfig.image
      parsePeer:
      - name: resourceVersion
        path: .metadata.resourceVersion
    update:
      generation:
        request: PUT
        body: |
          {
            "apiVersion": "redis.redis.opstreelabs.in/v1beta2",
            "kind": "Redis",
            "metadata": {
              "name": "{{ .Name }}",
              "resourceVersion": "{{ .Status.Peer.resourceVersion }}"
            },
            "spec": {
              "podSecurityContext": {
                "runAsUser": 1000,
                "fsGroup": 1000
              },
              "kubernetesConfig": {
                "image": "quay.io/opstree/redis:{{ index .Spec "version" }}",
                "imagePullPolicy": "IfNotPresent",
                "redisSecret": {
                   "name": "{{ .Spec.initPasswordSecretName }}",
                   "key": "{{ .Spec.secretKey }}"
                },
                "resources": {
                  "requests": {
                    "cpu": "101m",
                    "memory": "128Mi"
                  },
                  "limits": {
                    "cpu": "101m",
                    "memory": "128Mi"
                  }
                }
              },
              "redisExporter": {
                "enabled": false,
                "image": "quay.io/opstree/redis-exporter:v1.44.0",
                "imagePullPolicy": "Always",
                "resources": {
                  "requests": {
                    "cpu": "100m",
                    "memory": "128Mi"
                  },
                  "limits": {
                    "cpu": "100m",
                    "memory": "128Mi"
                  }
                }
              },
              "storage": {
                "volumeClaimTemplate": {
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "{{ index .Spec "storageSize" }}"
                      }
                    }
                  }
                }
              }
            }
          }
        uri: 'apis/redis.redis.opstreelabs.in/v1beta2/namespaces/{{ .Space }}/redis/{{ .Name }}'
      parse:
      - name: image
        path: .spec.kubernetesConfig.image
    delete:
      generation:
        request: DELETE
        uri: 'apis/redis.redis.opstreelabs.in/v1beta2/namespaces/{{ .Space }}/redis/{{ .Name }}'
    
